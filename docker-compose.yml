version: '3.9'

services:
  # PRODUCT SERVICE DATABASE
  product-db:
    image: postgres:15
    container_name: product_db
    restart: always
    environment:
      POSTGRES_USER: product_user
      POSTGRES_PASSWORD: product_pass
      POSTGRES_DB: product_db
    ports:
      - "5433:5432"
    volumes:
      - product_data:/var/lib/postgresql/data
    networks:
      - backend

  # CUSTOMER SERVICE DATABASE
  customer-db:
    image: postgres:15
    container_name: customer_db
    restart: always
    environment:
      POSTGRES_USER: customer_user
      POSTGRES_PASSWORD: customer_pass
      POSTGRES_DB: customer_db
    ports:
      - "5434:5432"
    volumes:
      - customer_data:/var/lib/postgresql/data
    networks:
      - backend

  # ORDER SERVICE DATABASE
  order-db:
    image: postgres:15
    container_name: order_db
    restart: always
    environment:
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: order_pass
      POSTGRES_DB: order_db
    ports:
      - "5435:5432"
    volumes:
      - order_data:/var/lib/postgresql/data
    networks:
      - backend

  # PRODUCT SERVICE
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product_service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://product-db:5432/product_db
      - SPRING_DATASOURCE_USERNAME=product_user
      - SPRING_DATASOURCE_PASSWORD=product_pass
    depends_on:
      - product-db
    networks:
      - backend

  # CUSTOMER SERVICE
  customer-service:
    build:
      context: ./customer-service
      dockerfile: Dockerfile
    container_name: customer_service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://customer-db:5432/customer_db
      - SPRING_DATASOURCE_USERNAME=customer_user
      - SPRING_DATASOURCE_PASSWORD=customer_pass
    depends_on:
      - customer-db
    networks:
      - backend

  # ORDER SERVICE
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order_service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-db:5432/order_db
      - SPRING_DATASOURCE_USERNAME=order_user
      - SPRING_DATASOURCE_PASSWORD=order_pass
      - PRODUCT_SERVICE_URL=http://product-service:8081
      - CUSTOMER_SERVICE_URL=http://customer-service:8082
    depends_on:
      - order-db
      - product-service
      - customer-service
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  product_data:
  customer_data:
  order_data:
